DROP TABLE IF EXISTS AREA CASCADE;

CREATE TABLE AREA
(
cod_area VARCHAR (10) NOT NULL PRIMARY KEY,
nombre VARCHAR (100) NOT NULL,
descripcion VARCHAR (200) NOT NULL
);

DROP TABLE IF EXISTS CAMA CASCADE;

CREATE TABLE CAMA
(
num_cama INTEGER NOT NULL PRIMARY KEY,
estado VARCHAR (20) NOT NULL,
descripcion VARCHAR (200) NOT NULL,
cod_area VARCHAR (10) NOT NULL,

CONSTRAINT area_fk FOREIGN KEY (cod_area)
REFERENCES AREA (cod_area)
ON UPDATE CASCADE ON DELETE NO ACTION
);

DROP TABLE IF EXISTS PERSONA CASCADE;

CREATE TABLE PERSONA
(
identificacion INTEGER NOT NULL PRIMARY KEY,
nombre VARCHAR(50) NOT NULL,
direccion VARCHAR (100) NOT NULL,
telefono INTEGER NOT NULL
);

DROP TABLE IF EXISTS PACIENTE CASCADE;

CREATE TABLE PACIENTE
(
identificacion INTEGER NOT NULL PRIMARY KEY,
fecha_nacimiento DATE NOT NULL,
actividad_economica VARCHAR(100) NOT NULL,
num_seguridad_social INTEGER NOT NULL,

CONSTRAINT persona_fk FOREIGN KEY (identificacion)
REFERENCES PERSONA (identificacion)
ON UPDATE CASCADE ON DELETE NO ACTION 
);

DROP TABLE IF EXISTS CAMA_PACIENTE CASCADE;

CREATE TABLE CAMA_PACIENTE
(
num_cama INTEGER NOT NULL,
id_paciente INTEGER NOT NULL,
fecha_asig DATE NOT NULL,

CONSTRAINT cama_paciente_pk PRIMARY KEY (num_cama, id_paciente),

CONSTRAINT cama_fk FOREIGN KEY (num_cama)
REFERENCES CAMA (num_cama)
ON UPDATE CASCADE ON DELETE NO ACTION,

CONSTRAINT paciente_fk FOREIGN KEY (id_paciente)
REFERENCES PACIENTE (identificacion)
ON UPDATE CASCADE ON DELETE NO ACTION
);


DROP TABLE IF EXISTS HISTORIA CASCADE;

CREATE TABLE HISTORIA
(
num_historia INTEGER NOT NULL PRIMARY KEY,
id_paciente INTEGER NOT NULL,
fecha_apertura DATE NOT NULL,

CONSTRAINT paciente_fk FOREIGN KEY (id_paciente)
REFERENCES PACIENTE (identificacion)
ON UPDATE CASCADE ON DELETE NO ACTION
);


DROP TABLE IF EXISTS REGISTRO_HISTORIA CASCADE;

CREATE TABLE REGISTRO_HISTORIA
(
id_registro INTEGER NOT NULL PRIMARY KEY,
num_historia INTEGER NOT NULL,
precio MONEY NOT NULL,

CONSTRAINT historia_fk FOREIGN KEY (num_historia)
REFERENCES HISTORIA (num_historia)
ON UPDATE CASCADE ON DELETE NO ACTION
);

DROP TABLE IF EXISTS CAUSA CASCADE;

CREATE TABLE CAUSA
(
codigo VARCHAR (10) NOT NULL PRIMARY KEY,
id_registro INTEGER NOT NULL,
nombre VARCHAR (20) NOT NULL,
descripcion VARCHAR (200) NOT NULL,

CONSTRAINT registro_historia_fk FOREIGN KEY (id_registro)
REFERENCES REGISTRO_HISTORIA (id_registro)
ON UPDATE CASCADE ON DELETE NO ACTION
);


DROP TABLE IF EXISTS MEDICAMENTOS CASCADE;

CREATE TABLE MEDICAMENTOS
(
codigo VARCHAR (10) NOT NULL PRIMARY KEY,
costo MONEY NOT NULL,
nombre VARCHAR (50) NOT NULL,
descripcion VARCHAR (200)
);

DROP TABLE IF EXISTS REGISTRO_HISTORIA_MEDICAMENTOS CASCADE;

CREATE TABLE REGISTRO_HISTORIA_MEDICAMENTOS
(
id_registro INTEGER NOT NULL,
codigo VARCHAR (10) NOT NULL,

CONSTRAINT registro_historia_medicamentos_pk PRIMARY KEY (id_registro, codigo),

CONSTRAINT registro_historia_fk FOREIGN KEY (id_registro)
REFERENCES REGISTRO_HISTORIA (id_registro)
);

DROP TABLE IF EXISTS EMPLEADO CASCADE;

CREATE TABLE EMPLEADO
(
identificacion INTEGER NOT NULL PRIMARY KEY,
codigo_area VARCHAR (10) NOT NULL,
cargo VARCHAR(20) NOT NULL,
email VARCHAR(50) NOT NULL,
salario MONEY NOT NULL,
id_jefe INTEGER NOT NULL,

CONSTRAINT empleado_fk FOREIGN KEY (id_jefe)
REFERENCES EMPLEADO (identificacion)
ON UPDATE CASCADE ON DELETE NO ACTION, 

CONSTRAINT persona_fk FOREIGN KEY (identificacion)
REFERENCES PERSONA (identificacion)
ON UPDATE CASCADE ON DELETE NO ACTION 

);

DROP TABLE IF EXISTS ENFERMERA CASCADE;

CREATE TABLE ENFERMERA
(
identificacion INTEGER NOT NULL PRIMARY KEY,
anos_experiencia INTEGER NOT NULL,


CONSTRAINT empleado_fk FOREIGN KEY (identificacion)
REFERENCES EMPLEADO (identificacion)
ON UPDATE CASCADE ON DELETE NO ACTION
);

DROP TABLE IF EXISTS ENFERMERA_HABILIDADES CASCADE;

CREATE TABLE ENFERMERA_HABILIDADES
(
identificacion INTEGER NOT NULL PRIMARY KEY,
habilidad VARCHAR(50),

CONSTRAINT enfermera_fk FOREIGN KEY (identificacion)
REFERENCES ENFERMERA (identificacion)
ON UPDATE CASCADE ON DELETE NO ACTION
);

DROP TABLE IF EXISTS MEDICO CASCADE;

CREATE TABLE MEDICO
(
identificacion INTEGER NOT NULL PRIMARY KEY,
especialidad VARCHAR (100) NOT NULL,
universidad VARCHAR (100) NOT NULL,
num_licencia INTEGER NOT NULL,
CONSTRAINT empleado_fk FOREIGN KEY (identificacion)
REFERENCES EMPLEADO (identificacion)
ON UPDATE CASCADE ON DELETE NO ACTION
);

DROP TABLE IF EXISTS CAMPANA CASCADE;

CREATE TABLE CAMPANA
(
codigo VARCHAR (10) NOT NULL PRIMARY KEY,
id_medico INTEGER NOT NULL,
nombre VARCHAR (100) NOT NULL,
fecha_realizacion DATE NOT NULL,
objetivo VARCHAR (200) NOT NULL,

CONSTRAINT medico_fk FOREIGN KEY (id_medico)
REFERENCES MEDICO (identificacion)
ON UPDATE CASCADE ON DELETE NO ACTION
);

DROP TABLE IF EXISTS CAMPANA_PACIENTE CASCADE;

CREATE TABLE CAMPANA_PACIENTE
(
id_paciente INTEGER NOT NULL,
codigo VARCHAR (10),

CONSTRAINT campana_paciente_pk PRIMARY KEY (id_paciente, codigo),

CONSTRAINT paciente_fk FOREIGN KEY (id_paciente)
REFERENCES PACIENTE (identificacion)
ON UPDATE CASCADE ON DELETE NO ACTION,

CONSTRAINT campana_fk FOREIGN KEY (codigo)
REFERENCES CAMPANA (codigo)
ON UPDATE CASCADE ON DELETE NO ACTION
);


DROP TABLE IF EXISTS HORARIO CASCADE;

CREATE TABLE HORARIO
(
id_medico INTEGER NOT NULL,
id_horario INTEGER NOT NULL,
fecha DATE NOT NULL,
hora TIME NOT NULL, 
num_horario INTEGER NOT NULL,
estado VARCHAR (20),

CONSTRAINT horario_pk PRIMARY KEY (id_horario),

CONSTRAINT medico_fk FOREIGN KEY (id_medico)
REFERENCES MEDICO (identificacion)
ON UPDATE CASCADE ON DELETE NO ACTION
);

DROP TABLE IF EXISTS CITAS CASCADE;

CREATE TABLE CITAS
(
id_paciente INTEGER NOT NULL,
id_horario INTEGER NOT NULL,
id_registro INTEGER NOT NULL,

CONSTRAINT citas_pk PRIMARY KEY (id_paciente, id_horario, id_registro),

CONSTRAINT paciente_fk FOREIGN KEY (id_paciente)
REFERENCES PACIENTE (identificacion)
ON UPDATE CASCADE ON DELETE NO ACTION,

CONSTRAINT horario_fk FOREIGN KEY (id_horario)
REFERENCES HORARIO (id_horario)
ON UPDATE CASCADE ON DELETE NO ACTION,

CONSTRAINT registro_historia_fk FOREIGN KEY (id_registro)
REFERENCES REGISTRO_HISTORIA (id_registro)
ON UPDATE CASCADE ON DELETE NO ACTION
);






